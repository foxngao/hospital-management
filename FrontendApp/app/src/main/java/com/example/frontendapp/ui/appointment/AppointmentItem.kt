package com.example.frontendapp.ui.appointment

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Create
import androidx.compose.material.icons.filled.Delete
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.frontendapp.data.model.Appointment

@Composable
fun AppointmentItem(
    appointment: Appointment,
    onDelete: (String) -> Unit,
    onEdit: (Appointment) -> Unit
) {
    Card(
        modifier = Modifier
            .padding(8.dp)
            .fillMaxWidth()
            .clip(RoundedCornerShape(12.dp))
            .shadow(2.dp),
        colors = CardDefaults.cardColors(containerColor = Color(0xFFF9FAFB)), // X√°m pastel r·∫•t nh·∫°t
        elevation = CardDefaults.cardElevation(defaultElevation = 2.dp)
    ) {
        Column(
            modifier = Modifier.padding(12.dp),
            verticalArrangement = Arrangement.spacedBy(8.dp)
        ) {
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "M√£ l·ªãch",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "üÜî M√£ l·ªãch: ${appointment.maLich}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "M√£ BN",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "üë§ M√£ BN: ${appointment.maBN}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "Khoa kh√°m",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "üè• Khoa kh√°m: ${appointment.tenKhoa ?: "null"}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "M√£ b√°c sƒ©",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "üßë‚Äç‚öïÔ∏è M√£ b√°c sƒ©: ${appointment.maBS ?: "Kh√¥ng r√µ"}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "Ng√†y kh√°m",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "üìÖ Ng√†y kh√°m: ${appointment.ngayKham}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "Gi·ªù kh√°m",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "‚è∞ Gi·ªù kh√°m: ${appointment.gioKham}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }
            Row(verticalAlignment = Alignment.CenterVertically) {
                Icon(
                    imageVector = Icons.Default.Create,
                    contentDescription = "Ghi ch√∫",
                    modifier = Modifier.size(16.dp),
                    tint = Color(0xFF0D3B66)
                )
                Spacer(modifier = Modifier.width(4.dp))
                Text(
                    "üìù Ghi ch√∫: ${appointment.ghiChu}",
                    color = Color(0xFF0D3B66),
                    fontSize = 14.sp,
                    fontWeight = FontWeight.Medium
                )
            }

            Row(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(top = 8.dp),
                horizontalArrangement = Arrangement.SpaceEvenly
            ) {
                Button(
                    onClick = { onEdit(appointment) },
                    modifier = Modifier
                        .weight(1f)
                        .height(40.dp),
                    colors = ButtonDefaults.buttonColors(containerColor = Color(0xFFC8E6C9)), // Xanh l√° pastel
                    shape = RoundedCornerShape(8.dp)
                ) {
                    Icon(
                        imageVector = Icons.Default.Create,
                        contentDescription = "S·ª≠a",
                        modifier = Modifier.size(16.dp),
                        tint = Color(0xFF2F855A)
                    )
                    Spacer(modifier = Modifier.width(4.dp))
                    Text(
                        "‚úèÔ∏è S·ª≠a",
                        color = Color(0xFF2F855A),
                        fontSize = 12.sp,
                        fontWeight = FontWeight.Medium
                    )
                }
                Spacer(modifier = Modifier.width(8.dp))
                Button(
                    onClick = { appointment.maLich?.let(onDelete) },
                    modifier = Modifier
                        .weight(1f)
                        .height(40.dp),
                    colors = ButtonDefaults.buttonColors(containerColor = Color(0xFFEFE0E0)), // ƒê·ªè pastel nh·∫°t
                    shape = RoundedCornerShape(8.dp)
                ) {
                    Icon(
                        imageVector = Icons.Default.Delete,
                        contentDescription = "Hu·ª∑",
                        modifier = Modifier.size(16.dp),
                        tint = Color(0xFFD32F2F)
                    )
                    Spacer(modifier = Modifier.width(4.dp))
                    Text(
                        "‚ùå Hu·ª∑",
                        color = Color(0xFFD32F2F),
                        fontSize = 12.sp,
                        fontWeight = FontWeight.Medium
                    )
                }
            }
        }
    }
}