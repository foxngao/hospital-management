// CONTROLLER: Ghi nh·∫≠n ƒë∆°n thu·ªëc v√† chi ti·∫øt ƒë∆°n thu·ªëc
const { v4: uuidv4 } = require("uuid");
const { DonThuoc, ChiTietDonThuoc } = require("./model");

// L·∫•y t·∫•t c·∫£ ƒë∆°n thu·ªëc
exports.getAll = async (req, res) => {
  try {
    const list = await DonThuoc.findAll({ order: [["ngayKeDon", "DESC"]] });
    res.json({ message: "L·∫•y danh s√°ch ƒë∆°n thu·ªëc", data: list });
  } catch (err) {
    console.error("‚ùå L·ªói Sequelize:", err);
    res.status(500).json({ message: "L·ªói l·∫•y danh s√°ch", error: err.message });
  }
};

// ‚úÖ T·∫°o ƒë∆°n thu·ªëc r·ªóng
exports.create = async (req, res) => {
  try {
    const { maHSBA, maBS } = req.body;
    const maDT = uuidv4().slice(0, 8).toUpperCase();

    const created = await DonThuoc.create({
      maDT,
      maHSBA,
      maBS,
      maThuoc: null, // ƒë∆°n r·ªóng, thu·ªëc th√™m sau
    });

    res.status(201).json({ message: "T·∫°o ƒë∆°n thu·ªëc th√†nh c√¥ng", data: created });
  } catch (err) {
    console.error("‚ùå L·ªói t·∫°o ƒë∆°n thu·ªëc:", err);
    console.error("üîç Chi ti·∫øt:", err?.original?.sqlMessage);
    res.status(500).json({ message: "L·ªói t·∫°o ƒë∆°n thu·ªëc", error: err.message });
  }
};

// Th√™m chi ti·∫øt ƒë∆°n thu·ªëc
exports.addChiTiet = async (req, res) => {
  try {
    const { maDT, maThuoc, soLuong, lieuDung } = req.body;
    const maCTDT = uuidv4().slice(0, 8).toUpperCase();

    const detail = await ChiTietDonThuoc.create({
      maCTDT,
      maDT,
      maThuoc,
      soLuong,
      lieuDung,
    });

    res.status(201).json({ message: "Th√™m chi ti·∫øt ƒë∆°n thu·ªëc th√†nh c√¥ng", data: detail });
  } catch (err) {
    console.error("‚ùå L·ªói Sequelize:", err);
    res.status(500).json({ message: "L·ªói th√™m chi ti·∫øt", error: err.message });
  }
};

// L·∫•y chi ti·∫øt ƒë∆°n thu·ªëc theo m√£ ƒë∆°n
exports.getChiTiet = async (req, res) => {
  try {
    const { maDT } = req.params;
    const list = await ChiTietDonThuoc.findAll({ where: { maDT } });
    res.json({ message: "Chi ti·∫øt ƒë∆°n thu·ªëc", data: list });
  } catch (err) {
    console.error("‚ùå L·ªói Sequelize:", err);
    res.status(500).json({ message: "L·ªói l·∫•y chi ti·∫øt", error: err.message });
  }
};
